{"version":3,"sources":["components/DisplayWeather.js","components/Navbar.js","App.js","index.js"],"names":["DisplayWeather","props","localWeather","type","icon","temp","windSpeed","Humidity","country","city","console","log","className","src","alt","Navbar","onSubmit","e","changeWeather","action","placeholder","onChange","changeRegion","target","value","App","state","coords","latitude","longitude","defaultWeather","id","data","inputData","weatherPlace","localData","homeTown","newsData","change","setState","event","preventDefault","i","Math","floor","random","deWeather","this","weatherData","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c85f117.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst DisplayWeather = (props) => {\r\n    // console.log(props.weatherData);\r\n\r\n    // const { temperature, description, location, region, country, wind_speed, pressure, precip, humidity, img } = props.weatherData;\r\n\r\n    //console.log(props.localWeather)\r\n\r\n    const {type,icon, temp, windSpeed,Humidity, country, city} =props.localWeather\r\n    console.log(icon)\r\n    return (\r\n        <>\r\n        <div className=\"user-weather\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-3 weather-temp\">\r\n                    <h1>{temp}<sup>o</sup>C , {type}</h1>\r\n                    {/* <h4>{id}</h4> */}\r\n                    <p>{city}  {country}</p>\r\n                </div> \r\n\r\n                    <div className=\"col-md-9\">\r\n         \r\n                    <img className=\"mainImg\" src={icon} alt=\"weather-img\" />\r\n                    \r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n            <div className=\"col-md-3 weather-info\">\r\n                <p><b>Wind Speed</b>(km/hr)</p>\r\n                <h2>{windSpeed}</h2>\r\n            </div>\r\n\r\n            {/* <div className=\"col-md-3 weather-info\">\r\n                <p><b>Preassure</b>(millibar)</p>\r\n                <h2>{pressure}</h2>\r\n            </div> */}\r\n\r\n            {/* <div className=\"col-md-3 weather-info\">\r\n                <p><b>Precipitation</b>(mm)</p>\r\n                <h2>{precip}</h2>\r\n            </div> */}\r\n\r\n            <div className=\"col-md-3 weather-info\">\r\n                <p><b>Humidity</b>(%)</p>\r\n                <h2>{Humidity}</h2>\r\n            </div>\r\n\r\n        </div>\r\n            \r\n    </div>\r\n        \r\n            \r\n\r\n\r\n\r\n    {/* <div className=\"user-weather\">\r\n                <div className=\"row\">\r\n                    \r\n            \r\n        </div>\r\n    </div> */}\r\n     </>\r\n    )\r\n}\r\n\r\nexport default DisplayWeather","import React from 'react';\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md 6\">\r\n                <div className=\"title\">Weather-app</div>\r\n            </div>\r\n            <div className=\"col-md 6\" onSubmit={(e) => props.changeWeather(e)}>\r\n                <form action=\"\" className=\"region\">\r\n                    <input className=\"regioninput\" placeholder=\"Enter Location\"  onChange={(e) => props.changeRegion(e.target.value)} /> \r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import React from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport DisplayWeather from './components/DisplayWeather';\nimport Navbar from './components/Navbar.js';\n//import Sunny from './components/sunny';\n\n\n\nclass App extends React.Component  {\n  // Default state of long and lat but to be changed to current\n  \n  state = {\n\n    coords: {\n      latitude: 45,\n      longitude: 60\n    },\n    defaultWeather: {\n      id: '0',\n      type: 'Very Grey',\n      icon: 'http://getwallpapers.com/wallpaper/full/3/e/4/924867-vertical-sunny-day-background-2574x2000-windows-10.jpg',\n      temp: '7',\n      windSpeed: '-2',\n      Humidity: '67',\n      city: 'London',\n      country: 'United Kingdom'\n\n    },\n    data: {},\n    inputData: '',\n    \n    weatherPlace: [\n      {\n        'id': '1',\n        'type': 'Grey',\n        'icon': 'http://4.bp.blogspot.com/_f_OmAdlU5os/TM6pNOC3jlI/AAAAAAAACSc/oFNogp59a-Y/s1600/rain-clouds-6.JPG',\n        'temp': '7',\n        'windSpeed': '13',\n        'Humidity': '89',\n        'city': ''\n        \n      },\n      {\n        'id': '2',\n        'type': 'Rain',\n        'icon':'https://il3.picdn.net/shutterstock/videos/8177929/thumb/1.jpg',\n        'temp': '12',\n        'windSpeed': '8',\n        'Humidity': '50',\n        'city': ''\n      },\n      {\n        'id': '3',\n        'type': 'clear',\n        'icon':'https://snapshotsofwanaka.files.wordpress.com/2013/06/20130606-161727.jpg',\n        'temp': '17',\n        'windSpeed': '5',\n        'Humidity': '58',\n        'city': ''\n      },\n      {\n        'id': '10',\n        'type': 'bright',\n        'icon':'http://i.huffpost.com/gen/1349857/images/o-BRIGHT-SUNRISE-facebook.jpg',\n        'temp': '21',\n        'windSpeed': '16',\n        'Humidity': '76',\n        'city': ''\n      },\n      {\n        'id': '9',\n        'type': 'sunny',\n        'icon':'http://getwallpapers.com/wallpaper/full/3/e/4/924867-vertical-sunny-day-background-2574x2000-windows-10.jpg',\n        'temp': '25',\n        'windSpeed': '14',\n        'Humidity': '47',\n        'city': ''\n      },\n      {\n        'id': '8',\n        'type': 'Bright sunny',\n        'icon':'https://images.fineartamerica.com/images-medium-large-5/summer-sky-with-bright-sun-rike-.jpg',\n        'temp': '30',\n        'windSpeed': '6',\n        'Humidity': '20',\n        'city': ''\n      }\n    ],\n\n    localData: {},\n    homeTown: {},\n    newsData: {}\n     \n    \n    \n  }\n\n  componentDidMount() {\n    // Get device location -\n    // How do we get device location? We use html 5 api which has a navigator object to get the device location. First we check if the geolocation is supported in the system.  \n    //if (navigator.geolocation) {\n\n      //console.log('Supported')\n      //We call a method to get our current device location position. This method getCurrentPosition requires passing a function to run. And this function requires a argument (call it what ever you want). But it will basically give you the position object. \n      //navigator.geolocation.getCurrentPosition((position) => {\n        // console.log(position.coords.latitude)\n        // Set current coords into a variable called newCoords\n        // let newCoords = { \n        //   latitude: position.coords.latitude,\n        //   longitude: position.coords.longitude\n        // }\n\n        // Set default state equal to newCoords on component mount.\n        // this.setState({ coords: newCoords });\n\n        // Api call\n    //     axios.get(`http://api.weatherstack.com/current?access_key=823d378bc0e421a61a1daa5a563e3104&query=${this.state.coords.latitude},${this.state.coords.longitude}`).then(res => {\n    //       // console.log(res);\n    //       let weatherData = {\n    //         location: res.data.location.name,\n    //         temperature: res.data.current.temperature,\n    //         description: res.data.current.weather_descriptions[0], \n    //         region: res.data.location.region,\n    //         country: res.data.location.country,\n    //         wind_speed: res.data.current.wind_speed,\n    //         pressure: res.data.current.pressure,\n    //         precip: res.data.current.precip,\n    //         humidity: res.data.current.humidity,\n    //         img: res.data.current.weather_icons\n    //       }\n    //       // Here we put our weather data into our state\n    //       this.setState({ data: weatherData });\n    //     })\n    //   });\n    // } else {\n    //   console.log('not supported')\n    // };\n\n     let deWeather = this.state.defaultWeather;\n\n     this.setState({localData: deWeather})\n  }\n\n  // Track the input field - (e.target.value is passed in as argument in onChange in Navbar@ component and city represents the argument as we console log the cit. We get the input value)\n  \n\n  // Change City weather\n\n  \n\n\n\n\nchange = (city) => {\n  this.setState({ inputData: city })\n  this.setState({ homeTown: city });\n}\n\n\nchangeWeather = (event) => {\n  event.preventDefault();\n  const i = Math.floor(Math.random() * 5) + 1;\n  if (i <= 2) {\n    let localWeather = this.state.weatherPlace[i];\n    this.setState({ localData: localWeather });\n    let city = this.state.weatherPlace[i].city;\n    this.setState({ inputData: city });\n    this.state.weatherPlace[i].city = this.state.homeTown;\n    \n  } else if (i >= 3) {\n    let localWeather = this.state.weatherPlace[i];\n    this.setState({ localData: localWeather });\n    this.state.weatherPlace[i].city = this.state.homeTown;\n  }\n}\n        \n      \n  \n  \n   \n    // let inputCity = this.state.weatherPlace[i].city;\n\n      \n    //console.log(this.state.weatherPlace[0].icon);\n    // let localWeather = this.state.weatherPlace[i] \n\n\n\n    // api call \n    // axios.get(`http://api.weatherstack.com/current?access_key=823d378bc0e421a61a1daa5a563e3104&query=${this.state.inputData}`).then(res => {\n    //   console.log(res);\n\n    //   let weatherData = {\n    //         location: res.data.location.name,\n    //         temperature: res.data.current.temperature,\n    //         description: res.data.current.weather_descriptions[0], \n    //         region: res.data.location.region,\n    //         country: res.data.location.country,\n    //         wind_speed: res.data.current.wind_speed,\n    //         pressure: res.data.current.pressure,\n    //         precip: res.data.current.precip,\n    //         humidity: res.data.current.humidity,\n    //         img: res.data.current.weather_icons\n    //       }\n    //       // Here we put our new weather data into our state\n    //       this.setState({ data: weatherData });\n    //})\n  \n  \n\n\n  render() {\n      return (\n      \n        <div className=\"App\">\n          <div className=\"container\">\n            <Navbar changeWeather={this.changeWeather} changeRegion={this.change}/>\n            <DisplayWeather localWeather={this.state.localData} weatherData={this.state.data} />\n            \n          </div>\n          \n          \n      </div>\n      \n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}